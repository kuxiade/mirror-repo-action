name: Test repo-sync-action with cache

on:
  # push推送时触发
  push:
    branches: [ main ]
    # 匹配到该路径的文件有push时触发
    paths:
      # .github/workflows/ 目录下的文件有推送提交时，工作流触发
      #- '.github/workflows/**'
      # 只有当本文件有推送提交时，才工作流触发
      - '.github/workflows/repo-sync-action-cache-test.yml'
      - 'action.yml'
      - 'Dockerfile'
      - 'entrypoint.sh'
    # paths-ignore 表示该路径的文件有push时忽略触发。这里使用上面的 paths 来设置更符合我的要求(只有当本文件有推送提交时，该工作流触发 )。
    # paths-ignore:
    #   - 'docs/**'
    #   - 'README.md'
  # 定时任务触发
  # schedule:
  #   # 每天北京时间9点跑
  #   # Runs at 04:00 UTC (12:00 AM Beijing) every day
  #   - cron:  '0 4 * * *'

jobs:
  run:
    name: Run test
    runs-on: ubuntu-latest
    steps:
      - name: a Print pre-cache path
        # 运行时展开为: ls -la /home/runner/work/repo-sync-action/repo-sync-action/mirror-repo-cache
        run: |
          pwd
          ls -la
          ls -la ${{ github.workspace }}

      - name: Checkout source codes
        uses: actions/checkout@v1

      - name: Get repo and time
        id: someInfo
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            core.setOutput('ownerRepoInfo', `${context.repo.owner}-${context.repo.repo}`);
            core.setOutput('timeInfo', new Date(Date.now()).toISOString().replace(/[^0-9]/g, ""));
            return context.repo.repo;
      
      - name: Cache src repos with actions/cache
        uses: actions/cache@v2
        id: cacheSrcRepos
        with:
          # 运行时 path 展开为: /home/runner/work/repo-sync-action/repo-sync-action/mirror-repo-cache
          path: ${{ github.workspace }}/mirror-repo-cache
          key: ${{ runner.os }}-${{ github.repository_owner }}-${{ steps.someInfo.outputs.result }}-cache-${{ steps.someInfo.outputs.timeInfo }}
          # or
          # key: ${{ runner.os }}-${{ steps.someInfo.outputs.ownerRepoInfo }}-cache-${{ steps.someInfo.outputs.timeInfo }}
          restore-keys: ${{ runner.os }}-${{ github.repository_owner }}-${{ steps.someInfo.outputs.result }}-cache-
          # or
          # restore-keys: ${{ runner.os }}-${{ steps.someInfo.outputs.ownerRepoInfo }}-cache-

      - name: Print the cache status
        if: steps.cacheSrcRepos.outputs.cache-hit == 'true'
        run: echo "Cached successfully."

      - name: Mirror Github:wearerequired/git-mirror-action to Gitee with repo-sync-action
        uses: ./.
        env:
          # 用于目的端上传代码的SSH key，用于从gituhb虚拟机上传代码到目的端仓库。
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_PRIVATE_SSH_KEY }}
          GITEE_ACCESS_TOKEN: ${{ secrets.GITEE_PERSONAL_ACCESS_TOKEN }}
          GITHUB_ACCESS_TOKEN: ${{ secrets.HUB_PERSONAL_ACCESS_TOKEN }}
        with:
          # # 用于目的端上传代码的SSH key，用于从gituhb虚拟机上传代码到目的端仓库。
          # ssh_private_key: ${{ secrets.GITEE_PRIVATE_SSH_KEY }}
          # 需要被同步的源端仓库
          src_repo_url: "git@github.com:wearerequired/git-mirror-action.git"
          # 需要同步到的目的仓库
          dst_repo_url: "git@gitee.com:kuxiade/git-mirror-action.git"
          # cache_path (optional) 将代码缓存在指定目录，用于与actions/cache配合以加速镜像过程。
          cache_path: "/github/workspace/mirror-repo-cache"
          request_tool: "curl"

      - name: Mirror Github:github/docs to Gitee with repo-sync-action
        uses: ./.
        env:
          # 用于目的端上传代码的SSH key，用于从gituhb虚拟机上传代码到目的端仓库。
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_PRIVATE_SSH_KEY }}
        with:
          # # 用于目的端上传代码的SSH key，用于从gituhb虚拟机上传代码到目的端仓库。
          # ssh_private_key: ${{ secrets.GITEE_PRIVATE_SSH_KEY }}
          # 需要被同步的源端仓库
          src_repo_url: "git@github.com:github/docs.git"
          # 需要同步到的目的仓库
          dst_repo_url: "git@gitee.com:kuxiade/github-docs.git"
          # cache_path (optional) 将代码缓存在指定目录，用于与actions/cache配合以加速镜像过程。
          cache_path: /github/workspace/mirror-repo-cache

      - name: a Print post-cache path
        # 运行时展开为: ls -la /home/runner/work/repo-sync-action/repo-sync-action/mirror-repo-cache
        run: |
          pwd
          ls -la
          ls -la ${{ github.workspace }}
          ls -la ${{ github.workspace }}/mirror-repo-cache